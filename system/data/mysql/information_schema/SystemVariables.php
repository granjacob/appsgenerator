<?php            namespace system\data\mysql\information_schema;            class SystemVariables extends MySQLBase  {                public function __construct()                {                    parent :: __construct();                    $this->tableReference = array(                'VARIABLE_NAME' => 'variableName','SESSION_VALUE' => 'sessionValue','GLOBAL_VALUE' => 'globalValue','GLOBAL_VALUE_ORIGIN' => 'globalValueOrigin','DEFAULT_VALUE' => 'defaultValue','VARIABLE_SCOPE' => 'variableScope','VARIABLE_TYPE' => 'variableType','VARIABLE_COMMENT' => 'variableComment','NUMERIC_MIN_VALUE' => 'numericMinValue','NUMERIC_MAX_VALUE' => 'numericMaxValue','NUMERIC_BLOCK_SIZE' => 'numericBlockSize','ENUM_VALUE_LIST' => 'enumValueList','READ_ONLY' => 'readOnly','COMMAND_LINE_ARGUMENT' => 'commandLineArgument',            );                }                private $variableName;private $sessionValue;private $globalValue;private $globalValueOrigin;private $defaultValue;private $variableScope;private $variableType;private $variableComment;private $numericMinValue;private $numericMaxValue;private $numericBlockSize;private $enumValueList;private $readOnly;private $commandLineArgument;                public function getvariableName()            {                return $this->variableName;            }public function getsessionValue()            {                return $this->sessionValue;            }public function getglobalValue()            {                return $this->globalValue;            }public function getglobalValueOrigin()            {                return $this->globalValueOrigin;            }public function getdefaultValue()            {                return $this->defaultValue;            }public function getvariableScope()            {                return $this->variableScope;            }public function getvariableType()            {                return $this->variableType;            }public function getvariableComment()            {                return $this->variableComment;            }public function getnumericMinValue()            {                return $this->numericMinValue;            }public function getnumericMaxValue()            {                return $this->numericMaxValue;            }public function getnumericBlockSize()            {                return $this->numericBlockSize;            }public function getenumValueList()            {                return $this->enumValueList;            }public function getreadOnly()            {                return $this->readOnly;            }public function getcommandLineArgument()            {                return $this->commandLineArgument;            }                public function setvariableName( $variableName )            {                $this->variableName = $variableName;            }public function setsessionValue( $sessionValue )            {                $this->sessionValue = $sessionValue;            }public function setglobalValue( $globalValue )            {                $this->globalValue = $globalValue;            }public function setglobalValueOrigin( $globalValueOrigin )            {                $this->globalValueOrigin = $globalValueOrigin;            }public function setdefaultValue( $defaultValue )            {                $this->defaultValue = $defaultValue;            }public function setvariableScope( $variableScope )            {                $this->variableScope = $variableScope;            }public function setvariableType( $variableType )            {                $this->variableType = $variableType;            }public function setvariableComment( $variableComment )            {                $this->variableComment = $variableComment;            }public function setnumericMinValue( $numericMinValue )            {                $this->numericMinValue = $numericMinValue;            }public function setnumericMaxValue( $numericMaxValue )            {                $this->numericMaxValue = $numericMaxValue;            }public function setnumericBlockSize( $numericBlockSize )            {                $this->numericBlockSize = $numericBlockSize;            }public function setenumValueList( $enumValueList )            {                $this->enumValueList = $enumValueList;            }public function setreadOnly( $readOnly )            {                $this->readOnly = $readOnly;            }public function setcommandLineArgument( $commandLineArgument )            {                $this->commandLineArgument = $commandLineArgument;            }            }            ?>