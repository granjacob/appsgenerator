<?php            namespace system\data\mysql\information_schema;            class ReferentialConstraints extends MySQLBase  {                public function __construct()                {                    parent :: __construct();                    $this->tableReference = array(                'CONSTRAINT_CATALOG' => 'constraintCatalog','CONSTRAINT_SCHEMA' => 'constraintSchema','CONSTRAINT_NAME' => 'constraintName','UNIQUE_CONSTRAINT_CATALOG' => 'uniqueConstraintCatalog','UNIQUE_CONSTRAINT_SCHEMA' => 'uniqueConstraintSchema','UNIQUE_CONSTRAINT_NAME' => 'uniqueConstraintName','MATCH_OPTION' => 'matchOption','UPDATE_RULE' => 'updateRule','DELETE_RULE' => 'deleteRule','TABLE_NAME' => 'tableName','REFERENCED_TABLE_NAME' => 'referencedTableName',            );                }                private $constraintCatalog;private $constraintSchema;private $constraintName;private $uniqueConstraintCatalog;private $uniqueConstraintSchema;private $uniqueConstraintName;private $matchOption;private $updateRule;private $deleteRule;private $tableName;private $referencedTableName;                public function getconstraintCatalog()            {                return $this->constraintCatalog;            }public function getconstraintSchema()            {                return $this->constraintSchema;            }public function getconstraintName()            {                return $this->constraintName;            }public function getuniqueConstraintCatalog()            {                return $this->uniqueConstraintCatalog;            }public function getuniqueConstraintSchema()            {                return $this->uniqueConstraintSchema;            }public function getuniqueConstraintName()            {                return $this->uniqueConstraintName;            }public function getmatchOption()            {                return $this->matchOption;            }public function getupdateRule()            {                return $this->updateRule;            }public function getdeleteRule()            {                return $this->deleteRule;            }public function gettableName()            {                return $this->tableName;            }public function getreferencedTableName()            {                return $this->referencedTableName;            }                public function setconstraintCatalog( $constraintCatalog )            {                $this->constraintCatalog = $constraintCatalog;            }public function setconstraintSchema( $constraintSchema )            {                $this->constraintSchema = $constraintSchema;            }public function setconstraintName( $constraintName )            {                $this->constraintName = $constraintName;            }public function setuniqueConstraintCatalog( $uniqueConstraintCatalog )            {                $this->uniqueConstraintCatalog = $uniqueConstraintCatalog;            }public function setuniqueConstraintSchema( $uniqueConstraintSchema )            {                $this->uniqueConstraintSchema = $uniqueConstraintSchema;            }public function setuniqueConstraintName( $uniqueConstraintName )            {                $this->uniqueConstraintName = $uniqueConstraintName;            }public function setmatchOption( $matchOption )            {                $this->matchOption = $matchOption;            }public function setupdateRule( $updateRule )            {                $this->updateRule = $updateRule;            }public function setdeleteRule( $deleteRule )            {                $this->deleteRule = $deleteRule;            }public function settableName( $tableName )            {                $this->tableName = $tableName;            }public function setreferencedTableName( $referencedTableName )            {                $this->referencedTableName = $referencedTableName;            }            }            ?>