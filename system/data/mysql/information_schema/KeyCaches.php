<?php            namespace system\data\mysql\information_schema;            class KeyCaches extends MySQLBase  {                public function __construct()                {                    parent :: __construct();                    $this->tableReference = array(                'KEY_CACHE_NAME' => 'keyCacheName','SEGMENTS' => 'segments','SEGMENT_NUMBER' => 'segmentNumber','FULL_SIZE' => 'fullSize','BLOCK_SIZE' => 'blockSize','USED_BLOCKS' => 'usedBlocks','UNUSED_BLOCKS' => 'unusedBlocks','DIRTY_BLOCKS' => 'dirtyBlocks','READ_REQUESTS' => 'readRequests','READS' => 'reads','WRITE_REQUESTS' => 'writeRequests','WRITES' => 'writes',            );                }                private $keyCacheName;private $segments;private $segmentNumber;private $fullSize;private $blockSize;private $usedBlocks;private $unusedBlocks;private $dirtyBlocks;private $readRequests;private $reads;private $writeRequests;private $writes;                public function getkeyCacheName()            {                return $this->keyCacheName;            }public function getsegments()            {                return $this->segments;            }public function getsegmentNumber()            {                return $this->segmentNumber;            }public function getfullSize()            {                return $this->fullSize;            }public function getblockSize()            {                return $this->blockSize;            }public function getusedBlocks()            {                return $this->usedBlocks;            }public function getunusedBlocks()            {                return $this->unusedBlocks;            }public function getdirtyBlocks()            {                return $this->dirtyBlocks;            }public function getreadRequests()            {                return $this->readRequests;            }public function getreads()            {                return $this->reads;            }public function getwriteRequests()            {                return $this->writeRequests;            }public function getwrites()            {                return $this->writes;            }                public function setkeyCacheName( $keyCacheName )            {                $this->keyCacheName = $keyCacheName;            }public function setsegments( $segments )            {                $this->segments = $segments;            }public function setsegmentNumber( $segmentNumber )            {                $this->segmentNumber = $segmentNumber;            }public function setfullSize( $fullSize )            {                $this->fullSize = $fullSize;            }public function setblockSize( $blockSize )            {                $this->blockSize = $blockSize;            }public function setusedBlocks( $usedBlocks )            {                $this->usedBlocks = $usedBlocks;            }public function setunusedBlocks( $unusedBlocks )            {                $this->unusedBlocks = $unusedBlocks;            }public function setdirtyBlocks( $dirtyBlocks )            {                $this->dirtyBlocks = $dirtyBlocks;            }public function setreadRequests( $readRequests )            {                $this->readRequests = $readRequests;            }public function setreads( $reads )            {                $this->reads = $reads;            }public function setwriteRequests( $writeRequests )            {                $this->writeRequests = $writeRequests;            }public function setwrites( $writes )            {                $this->writes = $writes;            }            }            ?>